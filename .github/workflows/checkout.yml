name: Manually triggered workflow
on:
  workflow_dispatch:

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: main
      - name: Checkout bromite filters
        uses: actions/checkout@v2
        with:
          repository: bromite/filters
          path: bromite
      - name: Put BASE version
        run: |
          echo "e92fc1b1c75689be05c9b49624ba3c464dc0d2c7" >> main/BASE
      - name: Get BASE version
        run: |
          echo "::set-output name=base-version::$(cat main/BASE)"
      - name: Get next version
        id: next-version
        run: |
          echo "::set-output name=next-version::$(cat main/metadata.json | jq -r '.version'| awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')"
      - name: Make banana filter
        env:
          NEXT_VERSION: ${{ steps.next-version.outputs.next-version }}
        run: |
          cp bromite/filters.dat main/$NEXT_VERSION.filter
          vim -c "set binary" -c "%s/wcslog.js/wcslog.ts/g" -c "wq" main/$NEXT_VERSION.filter
          zip -9 main/$NEXT_VERSION.filter.zip main/$NEXT_VERSION.filter
      - name: Update metadata.json version
        run: |
           jq '.version = "${{ steps.next-version.outputs.next-version }}"' main/metadata.json
      - run: |
          git -C main status
          if [[ $(git -C bromite rev-parse HEAD) = $(cat main/BASE) ]]; then
            ls
            cd main
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Release ${{ steps.next-version.outputs.next-version }}
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          title: Release ${{ steps.last-version.outputs.next-version }}
          body: ""
          signoff: false
